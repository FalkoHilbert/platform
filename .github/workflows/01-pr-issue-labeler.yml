name: Label Issues and PRs

on:
- pull_request
- issues

jobs:
  label:
    runs-on: ubuntu-24.04
    steps:
    - uses: srvaroa/labeler@v1.13.0
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  apply-team-label:
    runs-on: ubuntu-24.04
    if: github.event_name == 'issues' && ( github.event.action == 'opened' || github.event.action == 'reopened' )
    env:
      TEAM_NAME: "customer-support"
      TEAM_LABEL: "domain/customer-support"
    permissions:
      id-token: write
      issues: write
    steps:
      - id: sts
        continue-on-error: true
        uses: octo-sts/action@v1.0.0
        with:
          scope: shopware
          identity: ReadCollaborators
      -  uses: tspascoal/get-user-teams-membership@v3
         id: actorTeams
         with:
            username: ${{ github.actor }}
            GITHUB_TOKEN: ${{ steps.sts.outputs.token }}
      - name: debug
        if: runner.debug
        run: |
          echo "${{ github.actor }} is member of teams: ${{ steps.actorTeams.outputs.teams }}"
      - if: ${{ contains(steps.actorTeams.outputs.teams, github.env.TEAM_NAME) }}
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = context.payload.issue.number;
            const teamLabel = process.env.TEAM_LABEL;

            const response = await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: [teamLabel],
            });
          
            if (response.status !== 200) {
              throw new Error(`Failed to add label ${teamLabel} to issue #${issueNumber}`);
            }
